# DO NOT EDIT
# This is a generated file by the `rake build_matrix:semaphore:generate` task.
# See `build_matrix.yml` for the build matrix.
# Generate this file with `rake build_matrix:semaphore:generate`.
---
version: v1.0
name: AppSignal for JavaScript
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
auto_cancel:
  running:
    when: branch != 'master' AND branch != 'develop'
global_job_config:
  env_vars:
  - name: RUNNING_IN_CI
    value: 'true'
  - name: NODE_ENV
    value: test
  - name: _PACKAGES_CACHE
    value: v1
  - name: _BUNDLER_CACHE
    value: v1
  prologue:
    commands:
    - checkout
    - '[ -n "$NODE_VERSION" ] && sem-version node $NODE_VERSION || echo Skipping Node.js
      install'
    - script/setup
    - source ~/.bashrc
blocks:
- name: Validation
  dependencies: []
  task:
    jobs:
    - name: Validate CI setup
      commands:
      - rake build_matrix:semaphore:validate
- name: Linters
  dependencies: []
  task:
    jobs:
    - name: Ruby Lint (RuboCop)
      commands:
      - cache restore $_BUNDLER_CACHE-bundler-$(checksum Gemfile.lock)
      - bundle config set clean 'true'
      - bundle config set path .bundle
      - bundle install --jobs=3 --retry=3
      - cache store $_BUNDLER_CACHE-bundler-$(checksum Gemfile.lock) .bundle
      - bundle exec rubocop
    - name: JavaScript Lint (Prettier)
      env_vars:
      - name: NODE_VERSION
        value: '16'
      commands:
      - cache restore
      - cache store
      - mono bootstrap
      - npm run lint
    - name: Git Lint (Lintje)
      commands:
      - script/lint_git
- name: JavaScript with Node.js 16 - build
  dependencies:
  - Validation
  task:
    env_vars:
    - name: NODE_VERSION
      value: '16'
    prologue:
      commands:
      - cache restore
      - mono bootstrap --ci
      - cache store
    jobs:
    - name: Build
      commands:
      - mono build
      - cache store $_PACKAGES_CACHE-packages-$SEMAPHORE_GIT_SHA-v$NODE_VERSION packages
- name: JavaScript - Tests
  dependencies:
  - JavaScript with Node.js 16 - build
  task:
    env_vars:
    - name: NODE_VERSION
      value: '16'
    prologue:
      commands:
      - cache restore
      - cache restore $_PACKAGES_CACHE-packages-$SEMAPHORE_GIT_SHA-v$NODE_VERSION
      - mono bootstrap --ci
    jobs:
    - name: "@appsignal/angular - angular@latest"
      commands:
      - "(cd packages/angular && npm install @angular/core@latest --save-dev)"
      - mono test --package=@appsignal/angular
    - name: "@appsignal/angular - angular@8.2.14"
      commands:
      - "(cd packages/angular && npm install @angular/core@8.2.14 --save-dev)"
      - mono test --package=@appsignal/angular
    - name: "@appsignal/angular - angular@8.1.3"
      commands:
      - "(cd packages/angular && npm install @angular/core@8.1.3 --save-dev)"
      - mono test --package=@appsignal/angular
    - name: "@appsignal/core - core"
      commands:
      - mono test --package=@appsignal/core
    - name: "@appsignal/javascript - javascript"
      commands:
      - mono test --package=@appsignal/javascript
    - name: "@appsignal/plugin-breadcrumbs-console - plugin-breadcrumbs-console"
      commands:
      - mono test --package=@appsignal/plugin-breadcrumbs-console
    - name: "@appsignal/plugin-window-events - plugin-window-events"
      commands:
      - mono test --package=@appsignal/plugin-window-events
    - name: "@appsignal/preact - preact@latest"
      commands:
      - "(cd packages/preact && npm install preact@latest --save-dev)"
      - mono test --package=@appsignal/preact
    - name: "@appsignal/preact - preact@10.5.15"
      commands:
      - "(cd packages/preact && npm install preact@10.5.15 --save-dev)"
      - mono test --package=@appsignal/preact
    - name: "@appsignal/preact - preact@10.4.8"
      commands:
      - "(cd packages/preact && npm install preact@10.4.8 --save-dev)"
      - mono test --package=@appsignal/preact
    - name: "@appsignal/react - react@latest"
      commands:
      - "(cd packages/react && npm install react@latest --save-dev)"
      - mono test --package=@appsignal/react
    - name: "@appsignal/react - react@17.0.2"
      commands:
      - "(cd packages/react && npm install react@17.0.2 --save-dev)"
      - mono test --package=@appsignal/react
    - name: "@appsignal/react - react@16.14.0"
      commands:
      - "(cd packages/react && npm install react@16.14.0 --save-dev)"
      - mono test --package=@appsignal/react
    - name: "@appsignal/vue - vue@latest"
      commands:
      - "(cd packages/vue && npm install vue@latest --save-dev)"
      - mono test --package=@appsignal/vue
    - name: "@appsignal/vue - vue@3.2.20"
      commands:
      - "(cd packages/vue && npm install vue@3.2.20 --save-dev)"
      - mono test --package=@appsignal/vue
    - name: "@appsignal/vue - vue@2.6.14"
      commands:
      - "(cd packages/vue && npm install vue@2.6.14 --save-dev)"
      - mono test --package=@appsignal/vue
